#Snake Ladder
ladder = int(input())
lad = {}
for _ in range(ladder):
    u, v = [int(x) for x in input().split()]
    lad[u] = v

snake = int(input())
sna = {}
for _ in range(snake):
    u, v = [int(x) for x in input().split()]
    sna[u] = v

moves = 0
q = [(1, [])]  # Each entry in the queue is a tuple (position, path)   ,,,,Initialize a queue with starting position and an empty path
found = False      # to check if the goal is reached
vis = [False] * 101
vis[1] = True       # Mark the starting position as visited

while q and not found:
    new_q = []
    for t, path in q:        # t is the current position and path is the path taken so far
        for die in range(1, 7):
            new_pos = t + die
            if new_pos == 100:
                found = True
                path.append(100)
                print("Path:", " -> ".join(map(str, path)))
                break
            if 1 <= new_pos <= 100 and not vis[new_pos]:
                vis[new_pos] = True
                new_path = path + [new_pos]
                if new_pos in lad:                  # checking if new posn has ladder
                    new_q.append((lad[new_pos], new_path))
                elif new_pos in sna:                 # checking if new posn has snake
                    new_q.append((sna[new_pos], new_path))
                else:
                    new_q.append((new_pos, new_path))
    q = new_q
    moves += 1

if found:
    print("Minimum moves:", moves)
else:
    print("-1")
